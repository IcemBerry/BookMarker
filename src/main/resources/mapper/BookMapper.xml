<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.BookMapper">
  <resultMap id="BaseResultMap" type="model.Book">
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="book_isbn" jdbcType="VARCHAR" property="bookISBN" />
    <result column="book_note" jdbcType="VARCHAR" property="bookNote" />
    <result column="book_page" jdbcType="INTEGER" property="bookPage" />
    <result column="book_author" jdbcType="VARCHAR" property="bookAuthor" />
  </resultMap>
  <sql id="Base_Column_List">
    book_id, book_name, book_isbn, book_note, book_page, book_author
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <select id="selectAllBooks" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from book
  </select>
  <select id="selectByBookName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from book
    where book_name = #{bookName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="model.Book">
    insert into book (book_id, book_name, book_isbn,
      book_note, book_page, book_author
      )
    values (#{bookId,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{bookISBN,jdbcType=VARCHAR},
      #{bookNote,jdbcType=VARCHAR}, #{bookPage,jdbcType=INTEGER}, #{bookAuthor,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="model.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="bookISBN != null">
        book_isbn,
      </if>
      <if test="bookNote != null">
        book_note,
      </if>
      <if test="bookPage != null">
        book_page,
      </if>
      <if test="bookAuthor != null">
        book_author,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookISBN != null">
        #{bookISBN,jdbcType=VARCHAR},
      </if>
      <if test="bookNote != null">
        #{bookNote,jdbcType=VARCHAR},
      </if>
      <if test="bookPage != null">
        #{bookPage,jdbcType=INTEGER},
      </if>
      <if test="bookAuthor != null">
        #{bookAuthor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.Book">
    update book
    <set>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookISBN != null">
        book_isbn = #{bookISBN,jdbcType=VARCHAR},
      </if>
      <if test="bookNote != null">
        book_note = #{bookNote,jdbcType=VARCHAR},
      </if>
      <if test="bookPage != null">
        book_page = #{bookPage,jdbcType=INTEGER},
      </if>
      <if test="bookAuthor != null">
        book_author = #{bookAuthor,jdbcType=VARCHAR},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Book">
    update book
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_isbn = #{bookISBN,jdbcType=VARCHAR},
      book_note = #{bookNote,jdbcType=VARCHAR},
      book_page = #{bookPage,jdbcType=INTEGER},
      book_author = #{bookAuthor,jdbcType=VARCHAR}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
</mapper>